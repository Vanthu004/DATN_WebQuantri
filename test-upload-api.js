// Test script cho API upload m·ªõi
const axios = require('axios');
const FormData = require('form-data');
const fs = require('fs');

const BASE_URL = 'http://localhost:3000/api';
let authToken = '';

// Test 1: ƒêƒÉng nh·∫≠p ƒë·ªÉ l·∫•y token
async function testLogin() {
  try {
    console.log('üîê Testing login...');
    const response = await axios.post(`${BASE_URL}/users/login`, {
      email: 'admin@example.com',
      password: 'password123'
    });
    
    authToken = response.data.token;
    console.log('‚úÖ Login successful, token received');
    return true;
  } catch (error) {
    console.error('‚ùå Login failed:', error.response?.data || error.message);
    return false;
  }
}

// Test 2: Upload ·∫£nh
async function testUpload() {
  try {
    console.log('üì§ Testing upload...');
    
    const formData = new FormData();
    // T·∫°o m·ªôt file ·∫£nh test ƒë∆°n gi·∫£n (base64)
    const testImageBuffer = Buffer.from('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==', 'base64');
    
    formData.append('image', testImageBuffer, {
      filename: 'test.png',
      contentType: 'image/png'
    });
    formData.append('relatedModel', 'User');
    formData.append('relatedId', 'test-user-id');

    const response = await axios.post(`${BASE_URL}/upload`, formData, {
      headers: {
        'Authorization': `Bearer ${authToken}`,
        ...formData.getHeaders()
      }
    });

    console.log('‚úÖ Upload successful:', response.data);
    return response.data.upload._id;
  } catch (error) {
    console.error('‚ùå Upload failed:', error.response?.data || error.message);
    return null;
  }
}

// Test 3: L·∫•y danh s√°ch uploads
async function testGetUploads() {
  try {
    console.log('üìã Testing get uploads...');
    
    const response = await axios.get(`${BASE_URL}/uploads`, {
      headers: {
        'Authorization': `Bearer ${authToken}`
      }
    });

    console.log('‚úÖ Get uploads successful:', response.data.length, 'uploads found');
    return true;
  } catch (error) {
    console.error('‚ùå Get uploads failed:', error.response?.data || error.message);
    return false;
  }
}

// Test 4: C·∫≠p nh·∫≠t avatar cho user
async function testUpdateAvatar(uploadId) {
  try {
    console.log('üë§ Testing update avatar...');
    
    const response = await axios.put(`${BASE_URL}/users/update-avatar`, {
      avatarId: uploadId
    }, {
      headers: {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ Update avatar successful:', response.data);
    return true;
  } catch (error) {
    console.error('‚ùå Update avatar failed:', error.response?.data || error.message);
    return false;
  }
}

// Test 5: C·∫≠p nh·∫≠t profile v·ªõi avatar_url
async function testUpdateProfile() {
  try {
    console.log('üìù Testing update profile...');
    
    const response = await axios.put(`${BASE_URL}/users/update-profile`, {
      name: 'Test User Updated',
      email: 'test@example.com',
      phone_number: '0123456789',
      address: 'Test Address',
      avatar_url: 'https://example.com/test-avatar.jpg'
    }, {
      headers: {
        'Authorization': `Bearer ${authToken}`,
        'Content-Type': 'application/json'
      }
    });

    console.log('‚úÖ Update profile successful:', response.data);
    return true;
  } catch (error) {
    console.error('‚ùå Update profile failed:', error.response?.data || error.message);
    return false;
  }
}

// Ch·∫°y t·∫•t c·∫£ tests
async function runAllTests() {
  console.log('üöÄ Starting upload API tests...\n');
  
  // Test 1: Login
  const loginSuccess = await testLogin();
  if (!loginSuccess) {
    console.log('‚ùå Cannot proceed without authentication');
    return;
  }
  
  console.log('');
  
  // Test 2: Upload
  const uploadId = await testUpload();
  
  console.log('');
  
  // Test 3: Get uploads
  await testGetUploads();
  
  console.log('');
  
  // Test 4: Update avatar (n·∫øu upload th√†nh c√¥ng)
  if (uploadId) {
    await testUpdateAvatar(uploadId);
    console.log('');
  }
  
  // Test 5: Update profile
  await testUpdateProfile();
  
  console.log('\nüéâ All tests completed!');
}

// Ch·∫°y tests n·∫øu file ƒë∆∞·ª£c execute tr·ª±c ti·∫øp
if (require.main === module) {
  runAllTests().catch(console.error);
}

module.exports = {
  testLogin,
  testUpload,
  testGetUploads,
  testUpdateAvatar,
  testUpdateProfile,
  runAllTests
}; 